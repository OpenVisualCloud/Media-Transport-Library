From 4d215831e878336e286bebe56042ed244847770a Mon Sep 17 00:00:00 2001
From: Ric Li <ming3.li@intel.com>
Date: Wed, 30 Aug 2023 14:51:41 +0800
Subject: [PATCH] Use alarm to workaround vf uio no intr issue

Signed-off-by: Ric Li <ming3.li@intel.com>
---
 drivers/net/iavf/iavf_ethdev.c | 9 +++++----
 drivers/net/iavf/iavf_vchnl.c  | 3 ++-
 2 files changed, 7 insertions(+), 5 deletions(-)

diff --git a/drivers/net/iavf/iavf_ethdev.c b/drivers/net/iavf/iavf_ethdev.c
index f2fc5a5621..d76e825ed1 100644
--- a/drivers/net/iavf/iavf_ethdev.c
+++ b/drivers/net/iavf/iavf_ethdev.c
@@ -2610,7 +2610,7 @@ iavf_dev_init(struct rte_eth_dev *eth_dev)
 	struct iavf_adapter *adapter =
 		IAVF_DEV_PRIVATE_TO_ADAPTER(eth_dev->data->dev_private);
 	struct iavf_hw *hw = IAVF_DEV_PRIVATE_TO_HW(adapter);
-	struct iavf_info *vf = IAVF_DEV_PRIVATE_TO_VF(adapter);
+	/* struct iavf_info *vf = IAVF_DEV_PRIVATE_TO_VF(adapter); */
 	struct rte_pci_device *pci_dev = RTE_ETH_DEV_TO_PCI(eth_dev);
 	int ret = 0;
 
@@ -2678,8 +2678,8 @@ iavf_dev_init(struct rte_eth_dev *eth_dev)
 	rte_ether_addr_copy((struct rte_ether_addr *)hw->mac.addr,
 			&eth_dev->data->mac_addrs[0]);
 
-
-	if (vf->vf_res->vf_cap_flags & VIRTCHNL_VF_OFFLOAD_WB_ON_ITR) {
+	/* Workaround: use alarm since intr not working for uio */
+	if (/*vf->vf_res->vf_cap_flags & VIRTCHNL_VF_OFFLOAD_WB_ON_ITR*/false) {
 		/* register callback func to eal lib */
 		rte_intr_callback_register(pci_dev->intr_handle,
 					   iavf_dev_interrupt_handler,
@@ -2788,7 +2788,8 @@ iavf_dev_close(struct rte_eth_dev *dev)
 		iavf_config_promisc(adapter, false, false);
 
 	iavf_shutdown_adminq(hw);
-	if (vf->vf_res->vf_cap_flags & VIRTCHNL_VF_OFFLOAD_WB_ON_ITR) {
+	/* Workaround: use alarm since intr not working for uio */
+	if (/*vf->vf_res->vf_cap_flags & VIRTCHNL_VF_OFFLOAD_WB_ON_ITR*/false) {
 		/* disable uio intr before callback unregister */
 		rte_intr_disable(intr_handle);
 
diff --git a/drivers/net/iavf/iavf_vchnl.c b/drivers/net/iavf/iavf_vchnl.c
index 524732f67d..3aef305775 100644
--- a/drivers/net/iavf/iavf_vchnl.c
+++ b/drivers/net/iavf/iavf_vchnl.c
@@ -2080,7 +2080,8 @@ iavf_request_queues(struct rte_eth_dev *dev, uint16_t num)
 	args.out_buffer = vf->aq_resp;
 	args.out_size = IAVF_AQ_BUF_SZ;
 
-	if (vf->vf_res->vf_cap_flags & VIRTCHNL_VF_OFFLOAD_WB_ON_ITR) {
+	/* Workaround: use alarm since intr not working for uio */
+	if (/*vf->vf_res->vf_cap_flags & VIRTCHNL_VF_OFFLOAD_WB_ON_ITR*/false) {
 		err = iavf_execute_vf_cmd_safe(adapter, &args, 0);
 	} else {
 		rte_eal_alarm_cancel(iavf_dev_alarm_handler, dev);
-- 
2.34.1

