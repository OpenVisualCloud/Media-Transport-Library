name: ecosystem build checker

on:
  # allow manually trigger
  workflow_dispatch:
  push:
    branches:
      - main
      - 'maint-**'
  pull_request:
    branches:
      - main
      - 'maint-**'

permissions:
  contents: read

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      changed: ${{ steps.filter.outputs.ecosystem == 'true' }}
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v2
        id: filter
        with:
          filters: .github/path_filters.yml

  build:
    needs: changes
    if: ${{ github.repository == 'OpenVisualCloud/Media-Transport-Library' && needs.changes.outputs.changed == 'true' }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@a4aa98b93cab29d9b1101a6143fb8bce00e2eac4 # v2.7.1
        with:
          egress-policy: audit

      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2

      - name: Install the build dependency
        run: |
          sudo apt-get update -y
          sudo apt-get install -y sudo git gcc meson python3 python3-pyelftools pkg-config libnuma-dev libjson-c-dev libpcap-dev libgtest-dev libsdl2-dev libsdl2-ttf-dev libssl-dev
          sudo apt-get install -y dpdk-dev
          sudo apt-get install -y libobs-dev
          sudo apt-get install -y swig
          sudo apt-get install -y systemtap-sdt-dev

      - name: Git config
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"

      - name: Build
        run: |
          ./build.sh

      - name: Build obs plugin
        run: |
          ./script/build_obs_plugin.sh

      - name: Build librist with mtl
        run: |
          cd ecosystem/librist/
          ./build_librist_mtl.sh

      - name: Build python binding
        run: |
          ./script/build_python.sh

      - name: Build Rust binding
        run: |
          cd rust/
          cargo clippy --all-targets
          cargo build --all-targets --verbose
          cd imtl-sys
          cargo test --verbose