name: Ubuntu AF_XDP build

on:
  # allow manually trigger
  workflow_dispatch:
  push:
    branches:
      - main
      - 'maint-**'
  pull_request:
    branches:
      - main
      - 'maint-**'

env:
  # Customize the env if
  PKG_CONFIG_PATH: /usr/local/lib/pkgconfig:/usr/lib64/pkgconfig
  DPDK_VERSION: 25.03

permissions:
  contents: read

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      changed: ${{ steps.filter.outputs.afxdp_build == 'true' }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v2
        id: filter
        with:
          filters: .github/path_filters.yml

  build:
    needs: changes
    if: ${{ github.repository == 'OpenVisualCloud/Media-Transport-Library' && needs.changes.outputs.changed == 'true' }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    container:
      image: ubuntu:latest
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: DoozyX/clang-format-lint-action@v0.18.2 
        with:
          clangFormatVersion: '14'
          source: '.'
          extensions: 'hpp,h,cpp,c,cc'

      - name: checkout dpdk repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: 'DPDK/dpdk'
          ref: v${{  env.DPDK_VERSION  }}
          path: dpdk
      - name: Install the build dependency
        run: |
          apt-get update -y
          apt-get install -y sudo git gcc meson python3 python3-pyelftools pkg-config libnuma-dev libjson-c-dev libpcap-dev libgtest-dev libsdl2-dev libsdl2-ttf-dev libssl-dev
          apt-get install -y make m4 clang llvm zlib1g-dev libelf-dev libcap-ng-dev gcc-multilib
          apt-get install -y systemtap-sdt-dev

      - name: Build DPDK from source
        working-directory: dpdk
        run: |
          meson build
          ninja -C build
          cd build
          sudo ninja install

      - name: Checkout xdp-tools
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: 'xdp-project/xdp-tools'
          path: xdp-tools
          submodules: recursive

      - name: Build and install xdp-tools
        working-directory: xdp-tools
        run: |
          ./configure
          make && sudo make install
          cd lib/libbpf/src && sudo make install
         
      - name: Build
        working-directory: "${{ github.workspace }}"
        run: |
          ./build.sh

      - name: Build with debug
        working-directory: "${{ github.workspace }}"
        run: |
          rm build -rf
          ./build.sh debug
