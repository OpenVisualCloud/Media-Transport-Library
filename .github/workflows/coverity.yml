name: Coverity Scan

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  MTL_BUILD_DISABLE_PCAPNG: true
  PREFIX_DIR: /usr/local
  DEBIAN_FRONTEND: noninteractive

permissions:
  contents: read

jobs:
  coverity:
    runs-on: 'ubuntu-22.04'
    timeout-minutes: 90
    steps:
    - name: 'Harden Runner'
      uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
      with:
        egress-policy: audit

    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
          ref: maint-25.02
      

    - name: 'Install dependencies'
      run: |
        sudo apt-get update -y && \
        sudo apt-get install -y --no-install-recommends \
            git build-essential meson python3 python3-pyelftools pkg-config \
            libnuma-dev libjson-c-dev libpcap-dev libgtest-dev libsdl2-dev \
            libsdl2-ttf-dev libssl-dev ca-certificates m4 clang llvm zlib1g-dev \
            libelf-dev libcap-ng-dev libcap2-bin gcc-multilib systemtap-sdt-dev ninja-build \
            nasm dpdk-dev librdmacm-dev && \
        sudo apt-get clean && \
        sudo rm -rf /var/lib/apt/lists/*

    - name: 'Run coverity'
      uses: vapier/coverity-scan-action@2068473c7bdf8c2fb984a6a40ae76ee7facd7a85 # v1.8.0
      with:
        project: 'Media-transport-Library'
        email: ${{ secrets.COVERITY_EMAIL }}
        token: ${{ secrets.COVERITY_TOKEN }}
        build_language: 'cxx'
        build_platform: 'linux64'
        working-directory: '${{ github.workspace }}'
        command: ./build.sh 
    - uses: actions/upload-artifact@v4
      with:
        name: coverity-reports
        path: '${{ github.workspace }}/cov-int'
        
