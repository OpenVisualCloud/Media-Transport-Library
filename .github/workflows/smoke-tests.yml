name: smoke-tests-bare-metal
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'maint-**'
  pull_request:
    branches:
      - main
      - 'maint-**'
permissions:
  contents: read
jobs:
  run-smoke-tests:
    runs-on: [self-hosted, linux, x64, dpdk]
    timeout-minutes: 720
    steps:
      - name: 'preparation: Harden Runner'
        uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: audit
      - name: 'preparation: Checkout MTL'
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: '${{ github.ref }}'
      - uses: ./.github/actions/build
      - name: 'installation: Install pipenv environment'
        working-directory: tests/validation
        id: pipenv-install
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt
      - name: Replace secrets in example config files
        run: |
          sed -i "s+MTL_PATH_PLACEHOLDER+${{ secrets.BARE_METAL_MTL_PATH }}+" tests/validation/configs/test_config.yaml
          sed -i "s/IP_ADDRESS_PLACEHOLDER/${{ secrets.BARE_METAL_IP_ADDRESS }}/" tests/validation/configs/topology_config.yaml
          sed -i "s/SSH_PORT_PLACEHOLDER/${{ secrets.BARE_METAL_SSH_PORT }}/" tests/validation/configs/topology_config.yaml
          sed -i "s/USERNAME_PLACEHOLDER/${{ secrets.BARE_METAL_USERNAME }}/" tests/validation/configs/topology_config.yaml
          sed -i "s+KEY_PATH_PLACEHOLDER+${{ secrets.BARE_METAL_SSH_KEY_PATH }}+" tests/validation/configs/topology_config.yaml
      - name: 'preparation: Evaluate choosen validation-test-port-p and validation-test-port-r'
        run: |
          eval "export TEST_PORT_P=TEST_VF_PORT_P_0"
          eval "export TEST_PORT_R=TEST_VF_PORT_P_1"
          echo "TEST_PORT_P=${TEST_PORT_P}" >> "$GITHUB_ENV"
          echo "TEST_PORT_R=${TEST_PORT_R}" >> "$GITHUB_ENV"
          echo "TEST_PORT_P=${TEST_PORT_P}"
          echo "TEST_PORT_R=${TEST_PORT_R}"
      - name: 'preparation: Kill MtlManager and pytest routines'
        run: |
          sudo killall -SIGINT pipenv || true
          sudo killall -SIGINT pytest || true
          sudo killall -SIGINT MtlManager || true
      - name: 'preparation: Create VFs'
        run: |
          sudo rmmod irdma || true
          sudo ./script/nicctl.sh create_vf "${TEST_PF_PORT_P}" || true
          sudo ./script/nicctl.sh create_vf "${TEST_PF_PORT_R}" || true
      - name: 'preparation: Start MtlManager at background'
        run: |
          sudo MtlManager &
      - name: 'execution: Run validation-bare-metal tests in virtual environment'
        run: |
          tests/validation/.venv/bin/python3 -m pytest --topology_config=tests/validation/configs/topology_config.yaml --test_config=tests/validation/configs/test_config.yaml -m smoke  --template=html/index.html --report=report.html
      - name: "upload report"
        id: upload-report
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: smoke-tests-report
          path: |
            report.html
      - name: "Add report to summary"
        if: always()
        run: |
          {
            echo "## Smoke Tests Report"
            echo ""
            # Check if JSON report exists
            if [ -f "report.json" ]; then
              # Parse JSON report
                PASSED=$(jq '.summary.passed // 0' report.json)
                FAILED=$(jq '.summary.failed // 0' report.json)
                SKIPPED=$(jq '.summary.skipped // 0' report.json)
                ERROR=$(jq '.summary.errors // 0' report.json)
              # Add summary stats
              echo "| Status | Count |"
              echo "| ------ | ----- |"
              echo "| ✅ Passed | ${PASSED:-0} |"
              echo "| ❌ Failed | ${FAILED:-0} |"
              echo "| ⚠️ Error | ${ERROR:-0} |"
              echo "| ⏭️ Skipped | ${SKIPPED:-0} |"
              echo ""
              # Add test result details if available
              TOTAL=$((${PASSED:-0} + ${FAILED:-0} + ${ERROR:-0} + ${SKIPPED:-0}))
              echo "**Total Tests:** $TOTAL"
              echo ""
              if [ "${FAILED:-0}" -gt 0 ] || [ "${ERROR:-0}" -gt 0 ]; then
                echo "❌ **Some tests failed!** Please check the detailed report."
              else
                echo "✅ **All tests passed!**"
              fi
              echo ""
              # Add link to full report artifact
              echo "📄 [Download Full HTML Report](https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/artifacts/${{ steps.upload-report.outputs.artifact-id }})"
            else
              echo "❌ No report.json file was generated"
            fi
          } >> "$GITHUB_STEP_SUMMARY"
