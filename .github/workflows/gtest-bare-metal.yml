name: gtest-bare-metal

on:
  # allow manually trigger
  workflow_dispatch:
    inputs:
      branch-to-checkout:
        type: string
        default: 'main'
        required: false
        description: 'Branch name to use'
  push:
    branches:
      - main
      - 'maint-**'
  pull_request:
    branches:
      - main
      - 'maint-**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  gtest-check-for-changes:
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: read
    outputs:
      changed: ${{ steps.filter.outputs.linux_gtest == 'true' }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v2
        id: filter
        with:
          filters: .github/path_filters.yml

  run-tests:
    needs: gtest-check-for-changes
    if: github.repository == 'OpenVisualCloud/Media-Transport-Library' && (needs.gtest-check-for-changes.outputs.changed == 'true' || github.event_name == 'workflow_dispatch')
    runs-on: [self-hosted, linux, x64, dpdk]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: audit

      - name: Checkout MTL
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: '${{ inputs.branch-to-checkout || github.sha || github.ref }}'

      - name: Install the build dependency
        run: |
          sudo apt-get update -y && \
          sudo apt-get install -y \
              git gcc meson \
              python3-dev \
              python3-pyelftools \
              libjson-c-dev libpcap-dev libgtest-dev \
              libsdl2-dev libsdl2-ttf-dev libssl-dev \
              pkg-config libnuma-dev \
              systemtap-sdt-dev && \
          sudo apt-get autoremove -y

      - name: Build
        run: |
          sudo su && ./build.sh
          sudo ldconfig

      - name: Check if Kahawai driver version is loaded
        run: |
          sudo dmesg | grep "Intel(R) Ethernet Connection .* version Kahawai.*"

      - name: run gtest bare metal
        env:
          NIGHTLY: 0
        run: sudo -E "${{ github.workspace }}/.github/scripts/gtest.sh"
