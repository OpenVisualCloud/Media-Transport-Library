name: Base Build

on:
  # allow manually trigger
  workflow_dispatch:
  push:
    branches:
      - main
      - 'maint-**'
  pull_request:
    branches:
      - main
      - 'maint-**'
env:
  SETUP_ENVIRONMENT: 0
  CICD_BUILD: 1
  SETUP_BUILD_AND_INSTALL_ICE_DRIVER: 0
  CICD_BUILD_BUILD_ICE_DRIVER: 0
  SETUP_ENVIRONMENT: 1
  SETUP_BUILD_AND_INSTALL_DPDK: 1
  SETUP_BUILD_AND_INSTALL_EBPF_XDP: 0
  SETUP_BUILD_AND_INSTALL_GPU_DIRECT: 0

permissions:
  contents: read
jobs:
  changes:
    runs-on: ubuntu-24.04
    permissions:
      pull-requests: read
    outputs:
      ubuntu_build: ${{ steps.filter.outputs.ubuntu_build == 'true' }}
      ice_build: ${{ steps.filter.outputs.ice_build == 'true' }}
      manager_build: ${{ steps.filter.outputs.manager_build == 'true' }}
      plugin_build: ${{ steps.filter.outputs.plugin_build == 'true' }}
      rust_build: ${{ steps.filter.outputs.rust_build == 'true' }}
      python_build: ${{ steps.filter.outputs.python_build == 'true' }}
      mtl_monitors_build: ${{ steps.filter.outputs.mtl_monitors_build == 'true' }}
      mtl_readcap_build: ${{ steps.filter.outputs.mtl_readcap_build == 'true' }}
      mtl_cpu_emulator_build: ${{ steps.filter.outputs.mtl_cpu_emulator_build == 'true' }}

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v2
        id: filter
        with:
          filters: .github/path_filters.yml
  
  ubuntu-build-release:
    needs: changes
    if: ${{ github.repository == 'OpenVisualCloud/Media-Transport-Library' && needs.changes.outputs.ubuntu_build == 'true' }}
    runs-on: [self-hosted, Linux, X64, docker, kubernetes]
    timeout-minutes: 60
    steps:
      - name: Run setup_environment.sh with minimal environment and update cache
        run: sudo -E .github/scripts/setup_environment.sh
        env:
          MTL_BUILD_AND_INSTALL: 1


      - name: 'upload release build artifacts'
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: mtl-release-bin
          path: '${{ github.workspace }}/build/'
  
  # ubuntu-build-debug:
  #   needs: changes
  #   if: ${{ github.repository == 'OpenVisualCloud/Media-Transport-Library' && needs.changes.outputs.ubuntu_build == 'true' }}
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 60
  #   steps:
  #     - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
  #     - name: Build Debug
  #       uses: ./.github/actions/setup-enviroment
  #       with:
  #         mtl-build-and-install-debug: 1

  # ice_driver_build:
  #   needs: changes
  #   if: ${{ github.repository == 'OpenVisualCloud/Media-Transport-Library' && needs.changes.outputs.ice_build == 'true' }}
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 60
  #   steps:
  #     - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
  #     - name: Ice driver build
  #       uses: ./.github/actions/setup-enviroment
  #       with:
  #         setup-build-and-install-ice-driver:  1

  # ebpf-xdp-build:
  #   needs: changes
  #   if: ${{ github.repository == 'OpenVisualCloud/Media-Transport-Library' && needs.changes.outputs.manager_build == 'true' }}
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 60
  #   steps:
  #     - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
  #     - name: ebpf-xdp build
  #       uses: ./.github/actions/setup-enviroment
  #       with:
  #         setup-build-and-install-ebpf-xdp: 1
  
  # plugins-build:
  #   needs: changes
  #   if: ${{ github.repository == 'OpenVisualCloud/Media-Transport-Library' && needs.changes.outputs.plugin_build == 'true' }}
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 60
  #   steps:
  #     - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
  #     - name: Plugin build
  #       uses: ./.github/actions/setup-enviroment
  #       with:
  #         ecosystem-build-and-install-ffmpeg-plugin: 1
  #         ecosystem-build-and-install-gstreamer-plugin: 1
  #         ecosystem-build-and-install-rist-plugin: 1
  #         ecosystem-build-and-install-msdk-plugin: 1
  #         plugin-build-and-install-sample: 1
  #         plugin-build-and-install-plugin-avcodec: 1

  # rust-build: 
  #   needs: changes
  #   if: ${{ github.repository == 'OpenVisualCloud/Media-Transport-Library' && needs.changes.outputs.rust_build == 'true' }}
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 60
  #   steps:
  #     - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
  #     - name: Rust hook
  #       uses: ./.github/actions/setup-enviroment
  #       with:
  #         hook-rust: 1

  # python-build: 
  #   needs: changes
  #   if: ${{ github.repository == 'OpenVisualCloud/Media-Transport-Library' && needs.changes.outputs.rust_build == 'true' }}
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 60
  #   steps:
  #     - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
  #     - name: Python hook
  #       uses: ./.github/actions/setup-enviroment
  #       with:
  #         hook-python: 1