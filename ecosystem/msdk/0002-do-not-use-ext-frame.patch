From 0804a50182b1c0c216fac655c1835974f88a9b5a Mon Sep 17 00:00:00 2001
From: Ric Li <ming3.li@intel.com>
Date: Wed, 13 Dec 2023 13:20:19 +0800
Subject: [PATCH] do not use ext frame

---
 samples/sample_encode/src/pipeline_encode.cpp | 16 +++++++++-------
 1 file changed, 9 insertions(+), 7 deletions(-)

diff --git a/samples/sample_encode/src/pipeline_encode.cpp b/samples/sample_encode/src/pipeline_encode.cpp
index 6942eca0..6dcc2522 100644
--- a/samples/sample_encode/src/pipeline_encode.cpp
+++ b/samples/sample_encode/src/pipeline_encode.cpp
@@ -1935,7 +1935,6 @@ void CEncodingPipeline::InitIMTLPipeline(sInputParams* pParams){
         ops_rx.output_fmt = pParams->OutputFmt;
         ops_rx.device = ST_PLUGIN_DEVICE_AUTO;
         ops_rx.framebuff_cnt = 3;
-        ops_rx.flags |= ST20P_RX_FLAG_EXT_FRAME;
         if(pParams->has_dma) ops_rx.flags |= ST20P_RX_FLAG_DMA_OFFLOAD;
         ops_rx.notify_frame_available = MtlFrameAvailable;
 
@@ -2819,18 +2818,13 @@ mfxStatus CEncodingPipeline::MtlLoadNextFrame(mfxFrameSurface1* pSurf)
     MSDK_CHECK_POINTER(pSurf, MFX_ERR_NULL_PTR);
     MSDK_CHECK_POINTER(mtl.MtlRxHandle, MFX_ERR_NULL_PTR);
 
-    struct st_ext_frame ext_frame;
-
     mfxFrameInfo& pInfo = pSurf->Info;
     mfxFrameData& pData = pSurf->Data;
-    ext_frame.addr[0] = pData.Y;
-    ext_frame.linesize[0] = pData.Pitch;
-    ext_frame.size = pInfo.BufferSize;
 
     struct st_frame * frame = NULL;
     while (!frame && !mtl.stop)
     {
-        frame = st20p_rx_get_ext_frame(mtl.MtlRxHandle, &ext_frame);
+        frame = st20p_rx_get_frame(mtl.MtlRxHandle);
         if(!frame)
         { /* no frame */
             pthread_mutex_lock(&mtl.wake_mutex);
@@ -2841,6 +2835,14 @@ mfxStatus CEncodingPipeline::MtlLoadNextFrame(mfxFrameSurface1* pSurf)
 
     if (frame)
     {
+        size_t frame_linesize = frame->linesize[0];
+        uint8_t* src_addr = (uint8_t*)frame->addr[0];
+        uint8_t* dst_addr = pData.Y;
+        for(int line = 0; line < pInfo.Height; line++) {
+            memcpy(dst_addr, src_addr, frame_linesize);
+            src_addr += frame_linesize;
+            dst_addr += pData.Pitch;
+        }
         st20p_rx_put_frame(mtl.MtlRxHandle, frame);
         return MFX_ERR_NONE;
     }
-- 
2.34.1

