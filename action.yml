name: Windows MSYS2 Composite build
env:
  # FIXME: For some reason enabling jit debugging "fixes" random python crashes
  # see https://github.com/msys2/MINGW-packages/issues/11864 and
  # https://gitlab.gnome.org/GNOME/glib/-/merge_requests/3280#note_1678973
  MSYS: winjitdebug

permissions:
  contents: read

inputs:
  sys:
    description: MSYS2 support on systems MinGW64, Ucrt64
    required: true
    default: mingw64
  dpdk:
    description: DPDK support version on Media Transport
    required: true
    default: 23.11
  tap:
    description: Enable TAP device
    required: true
    default: true

runs:
  using: 'composite'
  steps:
    - name: Harden Runner
      uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
      with:
        egress-policy: audit

    - name: Install dependencies
      uses: msys2/setup-msys2@7efe20baefed56359985e327d329042cde2434ff # v2
      with:
        msystem: ${{inputs.sys}}
        update: true
        install: >-
          git
          base-devel
          unzip
          zip
        pacboy: >-
          pkgconf:p
          openssl:p
          gcc:p
          meson:p
          json-c:p
          libpcap:p
          gtest:p
          SDL2:p
          SDL2_ttf:p
          dlfcn:p
          binutils:p
          clang:p
          diffutils:p
          libx264:p
          libva:p
          ffnvcodec-headers:p
          nasm:p
          yasm:p

    - name: Install tools
      shell: msys2 {0}
      run: |
        wget https://nmap.org/npcap/dist/npcap-sdk-1.12.zip
        unzip -d npcap-sdk npcap-sdk-1.12.zip
        cp npcap-sdk/Lib/x64/* $MSYSTEM_PREFIX/lib/
        git clone https://github.com/alitrack/mman-win32
        cd mman-win32
        ./configure --prefix=$MSYSTEM_PREFIX
        make && make install

    - name: Checkout MTL repo
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        repository: 'OpenVisualCloud/Media-Transport-Library'
        ref: main
        path: .

    - name: Checkout DPDK repo
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        repository: 'DPDK/dpdk'
        ref: v${{inputs.dpdk}}
        path: dpdk
        clean: true

    - name: Convert symlink patch files to real file
      shell: msys2 {0}
      run: |
        cd patches/dpdk/${{inputs.dpdk}}
        ls *.patch | xargs -I{} bash -c 'if [[ $(sed -n '1p' "{}") =~ ^../.*\.patch$ ]]; then cp "$(cat "{}")" "{}"; fi'
        cd windows
        ls *.patch | xargs -I{} bash -c 'if [[ $(sed -n '1p' "{}") =~ ^../.*\.patch$ ]]; then cp "$(cat "{}")" "{}"; fi'

    - name: Apply patches for DPDK
      shell: bash
      run: |
        cd dpdk
        git config user.name github-actions
        git config user.email github-actions@github.com
        git am ../patches/dpdk/${{inputs.dpdk}}/*.patch
        git am ../patches/dpdk/${{inputs.dpdk}}/windows/*.patch

    - name: Build dpdk
      shell: msys2 {0}
      run: |
        cd dpdk
        meson setup build
        meson install -C build

    - name: Build MTL lib
      shell: msys2 {0}
      run: |
        meson setup build
        meson install -C build

    - name: Build MTL app
      shell: msys2 {0}
      run: |
        cd app
        meson setup build
        meson compile -C build

    - name: Build MTL test
      shell: msys2 {0}
      run: |
        cd tests
        meson setup build
        meson compile -C build

    - name: Build MTL plugins
      shell: msys2 {0}
      run: |
        cd plugins
        meson setup build
        meson install -C build

    - name: Build MTL lib with TAP
      shell: msys2 {0}
      run: |
        meson setup tap_build -Denable_tap=${{inputs.tap}}
        meson install -C tap_build
